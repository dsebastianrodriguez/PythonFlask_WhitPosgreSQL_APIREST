openapi: 3.0.0
info:
  title: API Employed with login and logout.
  description: this api is responsible for controlling the information of the employee database PostgreSQL.
  version: 1.0.0
servers:
- url: http://localhost:5000/api/employed/
tags:
- name: employed
  description: This endpoint is responsible for displaying the users found in the database.
paths:

  /:
    post:
      tags:
        - employed
      summary: insert the information of a new employee in the database.
      parametters:
        - $ref: '#/components/parameters/token'
      requestBody:
        content:
          application/json:
            schema:
              - $ref '#/components/schemas/BodyEmployedPost'
        required: true
        
      responses:
        200: 
          description: (OK) Employee information saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitEmployedPost'
        400:
          $ref '#/components/responses/BadRequest'
        401:
          $ref '#/components/responses/Unauthorized'
        404:
          $ref '#/components/responses/NotFound'
        500:
          $ref '#/components/responses/ServerError'
    /{idEmploye}:
      get:
        tags:
          - employed
        summary: Get the information from the database 
        parameters: 
        - name: idEmploye
        in: path
        description: Client identifier
        required: true
        schema:
          type: strig
        answer:
          200: 
            description: (OK) Worker information obtained
            content: 
              application/json:
                schema:
                  $ref '#/components/schemas/ExitEmployeGet'
          400:
            $ref '#/components/responses/BadRequest'
          401:
            $ref '#/components/responses/Unauthorized'
          404:
            $ref '#/components/responses/NotFound'
          500:
            $ref '#/components/responses/ServerError'
                  
            
components:
  responses:
    Unauthorized:
      description: (Unauthorized) It's not authorized
    NotFound:
      description: (NotFound) Information not found
    BadRequest:
      description: (BadRequets) The data sent is incorrect
    ServerError:
      description: (ServerError) Server error
    
  
  parametters: 
    - token:
          in: header
          description: authentication token
          required: true

  schemas:
    BodyEmployedPost:
      type: object
      properties:
        id:
          type: string
          description: autogenerated id for each worker
        name:
          type: string
          description: full name employed
        charge:
          type: string
          description: charge employed
        salary:
          type: float
          description: salary employed
        startdate:
          type: string
          description: startdate at work
    ExitEmployedPost:
      type: object
      properties:
        answer: 
          type: integer
          enum: [1]
          description: functional service flag
        idEmployed:
          type: integer
          enum: [222]
          description: Employee id now user
    ExitEmployedGet:
      type: object
      properties:
        id:
          type: string
          description: autogenerated id for each worker
        name:
          type: string
          description: full name employed
        charge:
          type: string
          description: charge employed
        salary:
          type: float
          description: salary employed
        startdate:
          type: string
          description: startdate at work
      